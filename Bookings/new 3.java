public class Workerthread1 extends AppCompatActivity implements Runnable {
        private int randno;

        public void run() {
            Looper.prepare();//Looper

            wHandler1 = new Handler() {       //Handle the incoming messages
                public void handleMessage(Message msg) {
                    int what = msg.what;
                    switch (what) {
                        case 1:
                            if (msg.arg1 == randno)
                                Log.i("similarity", "same");
                            else {                                        //In this case the thread 2 provides an incorrect guess to thread 1
                                Message msg1 = mHandler.obtainMessage(5);//Send message to send to the UI thread and inform that thread 1 has to display response incorrect
                                msg1.arg1 = 0;
                                mHandler.sendMessage(msg1);
                            }
                            break;
                        case 2:
                            break;
                    }
                }
            };

            if(count%2==0)
            playgame();

            Looper.loop();
        }

        void playgame() {
            Log.i("count", String.valueOf(count));
            if (count < 20) {
                GenerateRandom();//Generate a random number in thread 1
                Workerthread2 w2 = new Workerthread2();
                w2.GenerateGuess();
                count++;
                try {
                    Thread.sleep(2000);
                } catch (InterruptedException e) {
                    System.out.println("Thread interrupted!");
                }
                ;
            }
        }

        void GenerateRandom() {
            SecureRandom random = new SecureRandom();//Generating a random number in thread 1
            int num = random.nextInt(10000);
            String formatted = String.format("%05d", num);
            randno = Integer.valueOf(formatted);
            Message msg = mHandler.obtainMessage(1);
            msg.arg1 = randno;
            Log.i("random1",String.valueOf(randno));
            mHandler.sendMessage(msg);
        }

        private int guess;

        void GenerateGuess() {
            SecureRandom random = new SecureRandom();//Thread 2 generates a random number
            int num = random.nextInt(10000);
            String formatted = String.format("%05d", num);
            guess = Integer.valueOf(formatted);
            /*Message msg1 = mHandler.obtainMessage(3);
            msg1.arg1 = guess;
            Log.i("guess1",String.valueOf(guess));
            mHandler.sendMessage(msg1);*/
            Log.i("guess1",String.valueOf(guess));
            // Get a handler that can be used to post to the main thread
            Handler mainHandler = new Handler(Looper.getMainLooper());

            Runnable myRunnable = new Runnable() {
                @Override
                public void run() {
                    a.add(guess);
                    ArrayAdapter<Integer> adapter1 = new ArrayAdapter<Integer>(c, android.R.layout.simple_list_item_1, a);
                    listview.setAdapter(adapter1);
                } // This is your code
            };
            mainHandler.post(myRunnable);


            mainHandler.post(myRunnable);
            wHandler2.post(new Runnable() {    //send guess generated by thread 1 to thread 2
                public void run() {
                    Message msg = wHandler2.obtainMessage(1);
                    msg.arg1 = guess;
                    wHandler2.sendMessage(msg);
                }
            });
        }

    }